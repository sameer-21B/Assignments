## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?

Q2. Why is Python called a dynamically typed language?

Q3. List some pros and cons of Python programming language?

Q4. In what all domains can we use Python?

Q5. What are variable and how can we declare them?

Q6. How can we take an input from the user in Python?

Q7. What is the default datatype of the value that has been taken as an input using input() function?

Q8. What is type casting?

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

Q10. What are keywords?

Q11. Can we use keywords as a variable? Support your answer with reason.

Q12. What is indentation? What's the use of indentaion in Python?

Q13. How can we throw some output in Python?

Q14. What are operators in Python?

Q15. What is difference between / and // operators?

Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

Q18. What are boolean operator?

Q19. What will the output of the following?
```
1 or 0

0 and 0

True and False and True

1 or 0 or 0
```

Q20. What are conditional statements in Python?

Q21. What is use of 'if', 'elif' and 'else' keywords?

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```


Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Q26. What is a string? How can we declare string in Python?
  - A string is a data type which is used to store a set of unicode characters in memory.
    A string can be declared in python using inverted commas as follows:
    e.g. name="sameer"

Q27. How can we access the string using its index?
  - In a string characters are stored in a continuous manner and the position of every character in the string is represented by the range of numbers
    starting from 0 being the position of first character,1 being the position of second character and so on till (N-1) being the position of the last 
    character in the string where N is the total length of the string.Hence in order to access the string using it's index we can use the name of the string 
    followed by square brackets with the desired position between them.
    e.g. name[0] will return character stored at 0th position which is "s" in string "sameer".
         name[2] will return character stored at 2nd position which is "m" in string "sameer".

Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
  - code:
	print(string[-7:])
	

Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
  - code:
	print(string[-1:-8:-1])

Q30. Resverse the string given in the above question.
  - code:
	print(string[-1::-1])

Q31. How can you delete entire string at once?
  - using the del operator
    e.g:name="sameer"
	del name

Q32. What is escape sequence?
  - escape sequence is used to explicitly hide the true function of a character and just print it to the output as an ordinary character.

Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```
  - code:
	print("iNeuron's Big Data Course")

Q34. What is a list in Python?
   - A list is an abstract datatype which is used to store an array of objects of different datatypes at a certain memory location.It is a mutable and          ordered datatype meaning the contents of the list can be changed/updated at any time after it's declaration and the order of the elements within a list 
   is preserved and it does not changes.

Q35. How can you create a list in Python?
  - A list can be created as follows:
    e.g.- lst=['a','33','ineuron']
	- lst=[]

Q36. How can we access the elements in a list?
  - The elements in a list can be accessed by using the position or index at which the element is stored in the list.
    Positioning in a list starts at number 0.
    e.g.- lst=[2,3,4]
	  print(lst[1])#prints 3 which is store at position 1 in the list.
Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 
  - code:
	var=""
	for el in list:
		if type(el)=="list":
			for i in el:
				if type(i)=="str" and i=="iNeuron":
					var=i
	print(var)

Q38. Take a list as an input from the user and find the length of the list.
  - code:
	lst=input().split()
	print(len(list(lst)))

Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```
  - code:
	lst.insert(4,"Big")

Q40. What is a tuple? How is it different from list?
  - a tuple is also an order collection of items just like a list.It can store objects within it of different data types but the only difference 
    between a tuple and a list is tuple is immutable i.e the elements in a tuple defined at the time of it's decleration can't be changed/removed/updated.

Q41. How can you create a tuple in Python?
 - a tupe can be created as follows:
   e.g. tup1 = ('a','tree',55)

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
  - No, I wasn't able to add my name in the already created tuple because a tuple is immutable and does not support item assignment meaning you can't add     new elements or remove it's existing elements once it is created.

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
  - Yes, two tuples can be appended but,you will get a new tuple formed by appending those two tuples.
    code:
	tup1=(1,2)
	tup2=('a','bat')
	tup3=tup1+tup2

Q44. Take a tuple as an input and print the count of elements in it.
  - tup1=tuple(input().split())
    prit(len(tup1)

Q45. What are sets in Python?
  - sets in Python is a collection datatype which is unordered and mutable and always stores distinct values.

Q46. How can you create a set?
  - a set can be created either by usin {} brackets or by using the 'set()' function.
   e.g - set1 = {1,3,4,5}
	 set2 = set()

Q47. Create a set and add "iNeuron" in your set.
  - Code:
     set1=set()
     set1.add("iNeuron" )

Q48. Try to add multiple values using add() function.
  - code:
      set4={4,5,6,33,2}
      set4.add(33)
      set4.add(2)
      print(set4)
    output:
      {33, 2, 4, 5, 6}

Q49. How is update() different from add()?
  - update() method is used to update a set with the elements which are present in some other set but not in itself.
    whereas add() method is used to add elements in a set.

Q50. What is clear() in sets?
  - clear() method is used to remove all the elements present within a set or empty the set.

Q51. What is frozen set?
  - frozen set is just an immutable version of the set datatype in python meaning you can't 
    add new elements,remove previously added elements or modify the set in general once it is created unlike the normal set.

Q52. How is frozen set different from set?
  - frozen set is immutable whereas a normal set is mutable.

Q53. What is union() in sets? Explain via code.
  - union() method is used to return a new set with all the elements of both the sets.
    code:
        set1={1,2,3,4}
	set2={3,4,7,8}
	set1.union(set2)
    output:
	{1, 2, 3, 4, 7, 8}
            
Q54. What is intersection() in sets? Explain via code.
  - intersection() method is used to return a new set with only those elements which are common in both of the sets.
    code:
        set1={1,2,3,4}
	set2={3,4,7,8}
	set1.intersection(set2)
    output:
	{3,4}

Q55. What is dictionary ibn Python?

Q56. How is dictionary different from all other data structures.

Q57. How can we delare a dictionary in Python?

Q58. What will the output of the following?
```
var = {}
print(type(var))
```

Q59. How can we add an element in a dictionary?

Q60. Create a dictionary and access all the values in that dictionary.

Q61. Create a nested dictionary and access all the element in the inner dictionary.

Q62. What is the use of get() function?

Q63. What is the use of items() function?

Q64. What is the use of pop() function?

Q65. What is the use of popitems() function?

Q66. What is the use of keys() function?

Q67. What is the use of values() function?

Q68. What are loops in Python?

Q69. How many type of loop are there in Python?

Q70. What is the difference between for and while loops?

Q71. What is the use of continue statement?

Q72. What is the use of break statement?

Q73. What is the use of pass statement?

Q74. What is the use of range() function?

Q75. How can you loop over a dictionary?


### Coding problems
Q76. Write a Python program to find the factorial of a given number.

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

Q79. Write a Python program to check if a number is prime or not.

Q80. Write a Python program to check Armstrong Number.

Q81. Write a Python program to find the n-th Fibonacci Number.

Q82. Write a Python program to interchange the first and last element in a list.

Q83. Write a Python program to swap two elements in a list.

Q84. Write a Python program to find N largest element from a list.

Q85. Write a Python program to find cumulative sum of a list.

Q86. Write a Python program to check if a string is palindrome or not.

Q87. Write a Python program to remove i'th element from a string.

Q88. Write a Python program to check if a substring is present in a given string.

Q89. Write a Python program to find words which are greater than given length k.

Q90. Write a Python program to extract unquire dictionary values.

Q91. Write a Python program to merge two dictionary.

Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
```

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
```

Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```

Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
```

Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```
Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```

Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```

Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```

Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```
